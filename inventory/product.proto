syntax = "proto3";

package inventory;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/recktt77/proto-definitions/gen/inventory;inventorypb";


message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  int32 stock = 5;
  string category = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  bool is_deleted = 9;
}

message ProductID {
  string id = 1;
}

message ProductList {
  repeated Product products = 1;
}

message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  int32 stock = 4;
  string category = 5;
}

message UpdateProductRequest {
  string id = 1;
  optional string name = 2;
  optional string description = 3;
  optional double price = 4;
  optional int32 stock = 5;
  optional string category = 6;
}

service ProductService {
  rpc CreateProduct(CreateProductRequest) returns (Product);
  rpc GetProductByID(ProductID) returns (Product);
  rpc UpdateProduct(UpdateProductRequest) returns (Product);
  rpc DeleteProduct(ProductID) returns (google.protobuf.Empty);
  rpc GetAllProducts(google.protobuf.Empty) returns (ProductList);
  rpc GetProductsByIDs(ProductIDs) returns (ProductList);
}

message ProductIDs {
  repeated string ids = 1;
}


message Discount {
  string id = 1;
  string name = 2;
  string description = 3;
  double discount_percentage = 4;
  repeated string applicable_product_ids = 5;
  google.protobuf.Timestamp start_date = 6;
  google.protobuf.Timestamp end_date = 7;
  bool is_active = 8;
}

message DiscountID {
  string id = 1;
}

message CreateDiscountRequest {
  string name = 1;
  string description = 2;
  double discount_percentage = 3;
  repeated string applicable_product_ids = 4;
  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
}

message DiscountList {
  repeated Discount discounts = 1;
}

service DiscountService {
  rpc CreateDiscount(CreateDiscountRequest) returns (Discount);
  rpc GetAllDiscounts(google.protobuf.Empty) returns (DiscountList);
  rpc GetProductsWithDiscounts(google.protobuf.Empty) returns (ProductList);
  rpc DeleteDiscount(DiscountID) returns (google.protobuf.Empty);
}
